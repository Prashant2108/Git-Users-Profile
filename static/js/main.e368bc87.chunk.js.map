{"version":3,"sources":["components/repositries-list/repositories-component.jsx","components/followers-list/followers-list-component.jsx","components/modal/modal-component.jsx","components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","serviceWorker.js","index.js"],"names":["Repositories","state","repos","fetch","this","props","login","then","response","json","setState","console","log","className","map","repo","key","id","href","html_url","target","rel","name","stargazers_count","class","React","Component","Followers","followers","follower","src","avatar_url","width","height","alt","Popup","userinfo","text","public_repos","following","onClick","closePopup","show","Card","gitUsers","align","i","CardList","gitUser","SearchBox","placeholder","handleChange","type","onChange","App","searchField","searchField1","user","users","componentDidMount","e","value","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e368bc87.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport \"./repositories.style.css\";\r\n\r\nclass Repositories extends React.Component {\r\n  state = {\r\n    repos: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(`https://api.github.com/users/${this.props.login}/repos`)\r\n      .then((response) => response.json())\r\n      .then((repos) =>\r\n        this.setState({ repos: repos }, console.log(this.props.login))\r\n      );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Repositories\">\r\n        <h2>Repositories</h2>\r\n        {this.state.repos.map((repo) => (\r\n          <li key={repo.id}>\r\n            <a href={repo.html_url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n              {repo.name}\r\n            </a>\r\n            <span>\r\n              {repo.stargazers_count} <i class=\"fa fa-star\"></i>\r\n            </span>\r\n          </li>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Repositories;\r\n","import React from \"react\";\r\n\r\nclass Followers extends React.Component {\r\n  state = {\r\n    followers: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(`https://api.github.com/users/${this.props.login}/followers`)\r\n      .then((response) => response.json())\r\n      .then((followers) =>\r\n        this.setState({ followers: followers }, console.log(followers))\r\n      );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Followers\">\r\n        <h2>Followers</h2>\r\n        {this.state.followers.map((follower) => (\r\n          <li key={follower.id}>\r\n            <img\r\n              src={follower.avatar_url}\r\n              width=\"20\"\r\n              height=\"20\"\r\n              alt=\"follower\"\r\n            />\r\n            <a\r\n              href={follower.html_url}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              {follower.login}\r\n            </a>\r\n          </li>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Followers;\r\n","import React from \"react\";\r\n\r\nimport \"./modal.style.css\";\r\nimport Repositories from \"../repositries-list/repositories-component\";\r\nimport Followers from \"../followers-list/followers-list-component\";\r\n\r\nclass Popup extends React.Component {\r\n  state = {\r\n    userinfo: {},\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(`https://api.github.com/users/${this.props.text}`)\r\n      .then((response) => response.json())\r\n      .then((userinfo) => this.setState({ userinfo: userinfo }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"popup\">\r\n        <div className=\"popup_inner\">\r\n          <div className=\"popupbody\">\r\n            <div className=\"header\">\r\n              <div className=\"leftpannel\">\r\n                <img\r\n                  alt=\"avatar\"\r\n                  src={this.state.userinfo.avatar_url}\r\n                  width=\"110\"\r\n                  height=\"110\"\r\n                />\r\n                <p>\r\n                  <strong>{this.state.userinfo.name}</strong>\r\n                  <br></br>\r\n                  {this.state.userinfo.login}\r\n                </p>\r\n              </div>\r\n              <div className=\"rightpannel\">\r\n                <div>\r\n                  <p>\r\n                    Repositories<br></br>\r\n                    {this.state.userinfo.public_repos}\r\n                  </p>\r\n                </div>\r\n                <div>\r\n                  <p>\r\n                    Followers<br></br>\r\n                    {this.state.userinfo.followers}\r\n                  </p>\r\n                </div>\r\n                <div>\r\n                  <p>\r\n                    Following<br></br>\r\n                    {this.state.userinfo.following}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"content\">\r\n              <div className=\"repositories\">\r\n                <Repositories login={this.props.text} />\r\n              </div>\r\n              <div className=\"followers\">\r\n                <Followers login={this.props.text} />\r\n              </div>\r\n            </div>\r\n            <button className=\"closebutton\" onClick={this.props.closePopup}>\r\n              Close Me\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Popup;\r\n","import React from 'react';\r\n\r\nimport './card.style.css';\r\nimport Popup from '../modal/modal-component';\r\n\r\nlet show = -1;\r\n\r\nfunction showPopup(i) {\r\n        show = i;\r\n     };\r\n\r\nfunction closePopup(){\r\n    show = -1;\r\n};\r\n\r\n// function startPopup(f,i) {\r\n//     show = f\r\n//     showPopup = i;\r\n// }\r\n\r\nexport const Card = props => (\r\n    <div>\r\n    \r\n    {show === props.gitUsers.id &&\r\n        <Popup  text = {props.gitUsers.login}\r\n                closePopup = {closePopup}\r\n        />\r\n        }\r\n    <div className = 'card-container' align=\"center\">\r\n        <img alt=\"user\" src={props.gitUsers.avatar_url} width=\"180\" height=\"180\"/>\r\n        <h1>{props.gitUsers.login}</h1>\r\n        <button onClick={() => showPopup(props.gitUsers.id)}>Details</button>       \r\n    </div>\r\n \r\n    </div>\r\n);","import React from 'react';\r\n\r\nimport {Card} from '../card/card.component';\r\n\r\nimport './card-list.style.css';\r\n\r\nexport const CardList = props => (\r\n    <div className='card-list'>\r\n        {\r\n        props.gitUsers.map(gitUser => (<Card key={gitUser.id} gitUsers = {gitUser} />))\r\n      }\r\n    </div>\r\n);","import React from 'react';\r\n\r\nimport './search-box.style.css';\r\n\r\nexport const SearchBox = ({placeholder, handleChange}) => (\r\n    <input\r\n    className = 'search'\r\n    type = 'search' \r\n    placeholder = {placeholder} \r\n    onChange = {handleChange} />\r\n);","import React, { Component } from \"react\";\n\nimport \"./App.css\";\nimport { CardList } from \"./components/card-list/card-list.component\";\n\nimport { SearchBox } from \"./components/search-box/search-box.component\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      gitUsers: [],\n      searchField: \"\",\n      searchField1: \"\",\n    };\n  }\n\n  componentDidMount(user = \"\") {\n    if (!user) {\n      fetch(`https://api.github.com/users`)\n        .then((response) => response.json())\n        .then((users) => this.setState({ gitUsers: users }));\n    } else {\n      fetch(`https://api.github.com/users/${user}`)\n        .then((response) => response.json())\n        .then((users) => this.setState({ gitUsers: [users] }));\n    }\n  }\n\n  render() {\n    //const {gitUsers, searchField1 } = this.state;\n    // const filteredUsers = gitUsers.filter(user =>\n    //    user.login.toLowerCase().includes(searchField1.toLowerCase())\n    //   );\n    this.setState.gitUsers = this.componentDidMount(this.state.searchField1);\n    return (\n      <div className=\"App\">\n        <h1>\n          <i className=\"fa fa-github\"></i> Github Users\n        </h1>\n        <SearchBox\n          placeholder=\"search users\"\n          handleChange={(e) => this.setState({ searchField: e.target.value })}\n        />\n        <button\n          onClick={(e) =>\n            this.setState({ searchField1: this.state.searchField })\n          }\n        >\n          Search\n        </button>\n        <CardList gitUsers={this.state.gitUsers} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}